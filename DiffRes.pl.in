#!@PERL@
# 	$Log: DiffRes.pl.in,v $
# 	Revision 1.3  2006/05/19 11:06:24  ht
# 	correction dans les fichiers .pl et .pl.in
# 	
# 	Revision 1.2  2006/05/19 11:01:13  ht
# 	ajout d'évènement, correction de bug dans le makefile
# 	
# 	Revision 1.1.1.1  2006/05/03 11:35:11  ht
# 	SynoTerm - Environnement d'acquisition de relations sémantiques entre termes
# 	
# 	Revision 1.3  2001/05/20 15:00:34  thierry
# 	*** empty log message ***
#
# 	Revision 1.2  2001/05/01 18:56:39  thierry
# 	*** empty log message ***
#	

local %TabHLiens=();
local %TabHLiensVal=();

open FICHIERRES, $ARGV[0];

while(($ligne = <FICHIERRES>) && (!($ligne =~ /<Result>/))) {
    if ((!($ligne =~ /^<CLASSE/))&&(!($ligne =~ /^<Precision>/))) {
	chop $ligne;
	$ligne =~ s/__...//g;
	$ligne =~ s/=/ /g;
	if ($ARGV[2] eq "-typoP") {
	    $ligne =~ s/&(.)[^;]+;/\1/g;
	}
	my @tmp = split / : /, $ligne;
	my $lien = $tmp[0] . " : " . $tmp[1];
	if ((($tmp[3] & 0x0F00) != 0x0000)&&(($tmp[3] & 0x0F00) != 0x0F00)) {
	    $TabHLiensVal{$lien} = $ligne;
	}
	$TabHLiens{$lien} = $ligne;
    }
}

close FICHIERRES;

open FICHIERLEX, $ARGV[1];

@tmp2 = split /\//, $ARGV[0];
$nom1 = $tmp2[$#tmp2];
# print STDERR "$nom1\n";
@tmp2 = split /\//, $ARGV[1];
$nom2 = $tmp2[$#tmp2];
# print STDERR "$nom2\n";

open FICHIEROUT1, ">$nom1\_$nom2.diff";
open FICHIEROUT2, ">$nom1\_$nom2.val.diff";

while(($ligne = <FICHIERLEX>) && (!($ligne =~ /<Result>/))) {
    if ((!($ligne =~ /^<CLASSE/))&&(!($ligne =~ /^<Precision>/))) {
	chop $ligne;
	$ligne =~ s/__...//g;
	$ligne =~ s/=/ /g;
	if ($ARGV[2] eq "-typoP") {
	    $ligne =~ s/&(.)[^;]+;/\1/g;
	}
	my $lien = $ligne;

	if (exists $TabHLiens{$lien}) {
	    print FICHIEROUT1 $TabHLiens{$lien};
	    print FICHIEROUT1 "\n";
	}
	if (exists $TabHLiensVal{$lien}) {
	    print FICHIEROUT2 $TabHLiensVal{$lien};
	    print FICHIEROUT2 "\n";
	}
    }
}

close FICHIERLEX;
close FICHIEROUT1;
close FICHIEROUT2;

`cp $nom1\_$nom2.diff $nom1\_$nom2.diff.old`;
`cat $nom1\_$nom2.diff.old | sort | uniq > $nom1\_$nom2.diff`;
`rm $nom1\_$nom2.diff.old`;

`cp $nom1\_$nom2.val.diff $nom1\_$nom2.val.diff.old`;
`cat $nom1\_$nom2.val.diff.old | sort | uniq > $nom1\_$nom2.val.diff`;
`rm $nom1\_$nom2.val.diff.old`;
