/*	$Log: ConstrMatrice.fl,v $
/*	Revision 1.1.1.1  2006/05/03 11:35:11  ht
/*	SynoTerm - Environnement d'acquisition de relations sémantiques entre termes
/*	
 *	Revision 1.3  2001/05/01 19:18:48  thierry
 *	Correction des commentaires de log
 *
 *	Revision 1.2  2001/05/01 19:04:49  thierry
 *	*** empty log message ***
 */	
%{
#include<stdio.h>
#include"Synonymie.h"
#include<stdlib.h>
#include<malloc.h>

#define COMPTETE	0
#define COMPEXP		1

int Comp,len;
char categ[20],lemme[1000],graphie[1000],coord[1000],idctmax[100],idPhr[100];
Noeud *CTMax,*Pere,*NoeudCur;
char *graphiect1;
%}

%start normal TERME CAT LM GRAPHIE FINTERME FINCOORD IDPHR FL COORDIN
%%
	BEGIN normal ;

<normal>^[0-9]+:	{ /* Identifiant du CTMAX */
		CTMax=NULL;
		Pere=NULL;
		NoeudCur=NULL;
		strcpy(idctmax,ConstrMatricetext);
		idctmax[ConstrMatriceleng-1]=0;
/* 		printlog("%s\n",idctmax);*/
		BEGIN TERME ;
	}

<TERME>"{"	{ /* Construction d'un CTC */
		Pere=NoeudCur;
		NoeudCur = ConstrCT(Pere);
		if (Pere==NULL) {
		    CTMax=NoeudCur;
		}
	}
	
<TERME>"<"	{ /* Construction d'un CTS */
		Pere=NoeudCur;
		NoeudCur = ConstrCT(Pere);
		BEGIN CAT ;
	}
	
<CAT>[^>]+">"	{
	strcpy(categ,ConstrMatricetext);
	categ[3]=0;
	BEGIN LM ;
	}

<LM>[^\[]+"["	{
	strcpy(lemme,ConstrMatricetext);
	lemme[ConstrMatriceleng-1]=0;
	len = strlen(lemme)-1;
	while(lemme[len] == ' '){
	    lemme[len] = 0;
	    len--;
	}
/* 	printlog("%s\n", lemme); */
	BEGIN GRAPHIE ;
	}

<GRAPHIE>[^\]]+"]"	{
	BEGIN FINTERME ; 
	}

<FINTERME>"}"	{ /* Retour au Pere */
		if (NoeudCur->nbfils==0){
		    Ajout_Trait_CT(NoeudCur,categ,CATEG);
		    Ajout_Trait_CT(NoeudCur,lemme,LEMME);
		}
		NoeudCur=NoeudCur->Pere;
		Pere=NoeudCur->Pere;
	}

<FINTERME>"|"	{ /* Retour au Pere */
		Ajout_Trait_CT(NoeudCur,categ,CATEG);
		Ajout_Trait_CT(NoeudCur,lemme,LEMME);
		NoeudCur=NoeudCur->Pere;
		Pere=NoeudCur->Pere;
		BEGIN COORDIN ;
	}

<COORDIN>[^\|]+	{ /* Ajout de la coordination */
	BEGIN FINCOORD ;
	}

<FINCOORD>"|"	{
		BEGIN TERME ;
	}
	
<FINTERME>":"	{
		BEGIN IDPHR ;
	}
<IDPHR>[^\n]+	{
		Ajout_Trait_CT(NoeudCur,idctmax,IDGNM);
		strcpy(idPhr,ConstrMatricetext);
		idPhr[ConstrMatriceleng]=0;
		Ajout_Trait_CT(NoeudCur,idPhr,IDPHRASE);
		BEGIN FL;
	}
	
<FL>\n	{
/* 	printlog("%s\n", lemme); */
/* 	printlog("Passe (1)\n"); */
	Ajout_CTMax_Matrice(CTMax,TETE);
/* 	printlog("Passe (2)\n"); */
	Free_CT(CTMax);
	BEGIN normal;
	}

.	{ 
	};
%%

int ConstrMatricewrap()
{
	return(1);
}

